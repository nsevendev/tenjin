{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API service tenjin api",
        "title": "tenjin api",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/company/register": {
            "post": {
                "description": "Crée une entreprise dans la base de données MongoDB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Crée une entreprise",
                "parameters": [
                    {
                        "description": "Informations de l'entreprise à créer",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.CompanyCreateDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Entreprise créée",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "400": {
                        "description": "Paramètres invalides",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "500": {
                        "description": "Erreur interne lors de la création",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    }
                }
            }
        },
        "/company/retrieve-infos": {
            "post": {
                "description": "Utilise l'API INSEE pour retrouver les informations d'une entreprise",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Récupère les infos d'une entreprise via SIRET/SIREN",
                "parameters": [
                    {
                        "description": "SIRET et SIREN de l'entreprise",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/company.CompanyRetrieveDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entreprise trouvée",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "400": {
                        "description": "Paramètres invalides",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "500": {
                        "description": "Erreur interne lors de l'appel à l'API INSEE",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    }
                }
            }
        },
        "/uploadfile/test": {
            "post": {
                "description": "Test enregistre un fichier dans le stockage R2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UploadFileTest"
                ],
                "summary": "Enregistrement d'un fichier dans le stockage R2",
                "responses": {
                    "200": {
                        "description": "Fichier enregistré avec succès",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "400": {
                        "description": "Erreur à la récupération du fichier",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "500": {
                        "description": "Erreur à l'enregistrement dans S3",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Crée un utilisateur dans la base de données MongoDB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Crée un utilisateur",
                "parameters": [
                    {
                        "description": "Informations de l'utilisateur à créer",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserCreateDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Utilisateur créé",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "400": {
                        "description": "Paramètres invalides",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "500": {
                        "description": "Erreur interne lors de la création",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "addresses.Address": {
            "type": "object",
            "required": [
                "city",
                "country",
                "number",
                "street",
                "typeAddress",
                "zipCode"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "country": {
                    "enum": [
                        "france"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.Country"
                        }
                    ]
                },
                "number": {
                    "type": "string"
                },
                "street": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 5
                },
                "typeAddress": {
                    "enum": [
                        "invoice",
                        "shipping",
                        "headOffice",
                        "other",
                        "temporaire"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.TypeAddress"
                        }
                    ]
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "company.CompanyCreateDto": {
            "type": "object",
            "required": [
                "addresses",
                "businessName",
                "contactEmails",
                "phones",
                "siret",
                "status",
                "type"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addresses.Address"
                    }
                },
                "businessName": {
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 2
                },
                "contactEmails": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                },
                "formationIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logoUrl": {
                    "type": "string"
                },
                "phones": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/phones.Phone"
                    }
                },
                "siret": {
                    "type": "string"
                },
                "status": {
                    "enum": [
                        "enable",
                        "disable",
                        "suspended"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.StatusState"
                        }
                    ]
                },
                "type": {
                    "enum": [
                        "public",
                        "private",
                        "association"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.TypeInstitute"
                        }
                    ]
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "company.CompanyRetrieveDto": {
            "type": "object",
            "required": [
                "siren",
                "siret"
            ],
            "properties": {
                "siren": {
                    "type": "string"
                },
                "siret": {
                    "type": "string"
                }
            }
        },
        "constantes.Country": {
            "type": "string",
            "enum": [
                "france"
            ],
            "x-enum-varnames": [
                "CountryFrance"
            ]
        },
        "constantes.LabelPhone": {
            "type": "string",
            "enum": [
                "directeur",
                "secretaire",
                "reception",
                "administration",
                "autre",
                "general",
                "technique",
                "support"
            ],
            "x-enum-varnames": [
                "LabelPhoneDirector",
                "LabelPhoneSecretary",
                "LabelPhoneReception",
                "LabelPhoneAdministration",
                "LabelPhoneOther",
                "LabelPhoneGeneral",
                "LabelPhoneTechnical",
                "LabelPhoneSupport"
            ]
        },
        "constantes.PhoneNumberType": {
            "type": "string",
            "enum": [
                "mobile",
                "fixe",
                "fax",
                "autre"
            ],
            "x-enum-varnames": [
                "PhoneNumberMobile",
                "PhoneNumberFixe",
                "PhoneNumberFax",
                "PhoneNumberOther"
            ]
        },
        "constantes.StatusState": {
            "type": "string",
            "enum": [
                "enable",
                "disable",
                "suspended",
                "expired",
                "archived"
            ],
            "x-enum-varnames": [
                "StatusStateEnable",
                "StatusStateDisable",
                "StatusStateSuspended",
                "StatusStateExpired",
                "StatusStateArchived"
            ]
        },
        "constantes.TypeAddress": {
            "type": "string",
            "enum": [
                "invoice",
                "shipping",
                "headOffice",
                "other",
                "temporaire"
            ],
            "x-enum-varnames": [
                "TypeAddressInvoice",
                "TypeAddressShipping",
                "TypeAddressHeadOffice",
                "TypeAddressOther",
                "TypeAddressTemporary"
            ]
        },
        "constantes.TypeInstitute": {
            "type": "string",
            "enum": [
                "public",
                "private",
                "association"
            ],
            "x-enum-varnames": [
                "InstitutePublic",
                "InstitutePrivate",
                "InstituteAssociation"
            ]
        },
        "ginresponse.JsonFormatterSwag": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/ginresponse.JsonSwagMeta"
                }
            }
        },
        "ginresponse.JsonSwagMeta": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "phones.Phone": {
            "type": "object",
            "required": [
                "label",
                "number",
                "type"
            ],
            "properties": {
                "label": {
                    "enum": [
                        "directeur",
                        "secretaire",
                        "reception",
                        "administration",
                        "autre",
                        "technique",
                        "support"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.LabelPhone"
                        }
                    ]
                },
                "number": {
                    "description": "Format international",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "mobile",
                        "fix",
                        "fax",
                        "autre"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/constantes.PhoneNumberType"
                        }
                    ]
                }
            }
        },
        "user.UserCreateDto": {
            "type": "object",
            "required": [
                "email",
                "firstname",
                "lastname",
                "roles"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "lastname": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "training",
                        "employed",
                        "jobseeker"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "headers"
        }
    }
}