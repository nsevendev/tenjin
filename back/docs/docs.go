// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/company/create": {
            "post": {
                "description": "Permet de créer une nouvelle company",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Crée une nouvelle company",
                "parameters": [
                    {
                        "description": "Informations de la company à créer",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/insee.CompanyCreateDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Company créée avec succès",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    },
                    "500": {
                        "description": "Erreur interne",
                        "schema": {
                            "$ref": "#/definitions/ginresponse.JsonFormatterSwag"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ginresponse.JsonFormatterSwag": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "object"
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "$ref": "#/definitions/ginresponse.JsonSwagMeta"
                }
            }
        },
        "ginresponse.JsonSwagMeta": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "insee.CompanyCreateDto": {
            "type": "object",
            "required": [
                "address",
                "business_name",
                "city",
                "siret",
                "zip_code"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "siret": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "headers"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "tenjin api",
	Description:      "API service tenjin api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
