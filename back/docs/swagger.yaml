definitions:
  addresses.Address:
    properties:
      city:
        maxLength: 100
        minLength: 2
        type: string
      country:
        allOf:
        - $ref: '#/definitions/constantes.Country'
        enum:
        - france
      number:
        type: string
      street:
        maxLength: 200
        minLength: 5
        type: string
      typeAddress:
        allOf:
        - $ref: '#/definitions/constantes.TypeAddress'
        enum:
        - invoice
        - shipping
        - headOffice
        - other
        - temporaire
      zipCode:
        type: string
    required:
    - city
    - country
    - number
    - street
    - typeAddress
    - zipCode
    type: object
  company.CompanyCreateDto:
    properties:
      addresses:
        items:
          $ref: '#/definitions/addresses.Address'
        type: array
      businessName:
        maxLength: 200
        minLength: 2
        type: string
      contactEmails:
        items:
          type: string
        minItems: 1
        type: array
      formationIds:
        items:
          type: string
        type: array
      logoUrl:
        type: string
      phones:
        items:
          $ref: '#/definitions/phones.Phone'
        minItems: 1
        type: array
      siret:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/constantes.StatusState'
        enum:
        - enable
        - disable
        - suspended
      type:
        allOf:
        - $ref: '#/definitions/constantes.TypeInstitute'
        enum:
        - public
        - private
        - association
      userIds:
        items:
          type: string
        type: array
    required:
    - addresses
    - businessName
    - contactEmails
    - phones
    - siret
    - status
    - type
    type: object
  company.CompanyRetrieveDto:
    properties:
      siren:
        type: string
      siret:
        type: string
    required:
    - siren
    - siret
    type: object
  constantes.Country:
    enum:
    - france
    type: string
    x-enum-varnames:
    - CountryFrance
  constantes.LabelPhone:
    enum:
    - directeur
    - secretaire
    - reception
    - administration
    - autre
    - general
    - technique
    - support
    type: string
    x-enum-varnames:
    - LabelPhoneDirector
    - LabelPhoneSecretary
    - LabelPhoneReception
    - LabelPhoneAdministration
    - LabelPhoneOther
    - LabelPhoneGeneral
    - LabelPhoneTechnical
    - LabelPhoneSupport
  constantes.PhoneNumberType:
    enum:
    - mobile
    - fixe
    - fax
    - autre
    type: string
    x-enum-varnames:
    - PhoneNumberMobile
    - PhoneNumberFixe
    - PhoneNumberFax
    - PhoneNumberOther
  constantes.StatusState:
    enum:
    - enable
    - disable
    - suspended
    - expired
    - archived
    type: string
    x-enum-varnames:
    - StatusStateEnable
    - StatusStateDisable
    - StatusStateSuspended
    - StatusStateExpired
    - StatusStateArchived
  constantes.TypeAddress:
    enum:
    - invoice
    - shipping
    - headOffice
    - other
    - temporaire
    type: string
    x-enum-varnames:
    - TypeAddressInvoice
    - TypeAddressShipping
    - TypeAddressHeadOffice
    - TypeAddressOther
    - TypeAddressTemporary
  constantes.TypeInstitute:
    enum:
    - public
    - private
    - association
    type: string
    x-enum-varnames:
    - InstitutePublic
    - InstitutePrivate
    - InstituteAssociation
  ginresponse.JsonFormatterSwag:
    properties:
      data:
        type: object
      error:
        type: object
      message:
        type: string
      meta:
        $ref: '#/definitions/ginresponse.JsonSwagMeta'
    type: object
  ginresponse.JsonSwagMeta:
    properties:
      method:
        type: string
      path:
        type: string
      status:
        type: integer
      timestamp:
        type: string
    type: object
  phones.Phone:
    properties:
      label:
        allOf:
        - $ref: '#/definitions/constantes.LabelPhone'
        enum:
        - directeur
        - secretaire
        - reception
        - administration
        - autre
        - technique
        - support
      number:
        description: Format international
        type: string
      type:
        allOf:
        - $ref: '#/definitions/constantes.PhoneNumberType'
        enum:
        - mobile
        - fix
        - fax
        - autre
    required:
    - label
    - number
    - type
    type: object
  user.UserCreateDto:
    properties:
      email:
        type: string
      firstname:
        maxLength: 100
        minLength: 2
        type: string
      lastname:
        maxLength: 100
        minLength: 2
        type: string
      organizations:
        items:
          type: string
        type: array
      roles:
        items:
          type: string
        type: array
      sessions:
        items:
          type: string
        type: array
      status:
        enum:
        - training
        - employed
        - jobseeker
        type: string
    required:
    - email
    - firstname
    - lastname
    - roles
    type: object
info:
  contact: {}
  description: API service tenjin api
  title: tenjin api
  version: "1.0"
paths:
  /company/register:
    post:
      consumes:
      - application/json
      description: Crée une entreprise dans la base de données MongoDB
      parameters:
      - description: Informations de l'entreprise à créer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/company.CompanyCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Entreprise créée
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "400":
          description: Paramètres invalides
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "500":
          description: Erreur interne lors de la création
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
      summary: Crée une entreprise
      tags:
      - company
  /company/retrieve-infos:
    post:
      consumes:
      - application/json
      description: Utilise l'API INSEE pour retrouver les informations d'une entreprise
      parameters:
      - description: SIRET et SIREN de l'entreprise
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/company.CompanyRetrieveDto'
      produces:
      - application/json
      responses:
        "200":
          description: Entreprise trouvée
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "400":
          description: Paramètres invalides
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "500":
          description: Erreur interne lors de l'appel à l'API INSEE
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
      summary: Récupère les infos d'une entreprise via SIRET/SIREN
      tags:
      - company
  /uploadfile/test:
    post:
      consumes:
      - application/json
      description: Test enregistre un fichier dans le stockage R2
      produces:
      - application/json
      responses:
        "200":
          description: Fichier enregistré avec succès
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "400":
          description: Erreur à la récupération du fichier
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "500":
          description: Erreur à l'enregistrement dans S3
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
      summary: Enregistrement d'un fichier dans le stockage R2
      tags:
      - UploadFileTest
  /user/register:
    post:
      consumes:
      - application/json
      description: Crée un utilisateur dans la base de données MongoDB
      parameters:
      - description: Informations de l'utilisateur à créer
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.UserCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Utilisateur créé
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "400":
          description: Paramètres invalides
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
        "500":
          description: Erreur interne lors de la création
          schema:
            $ref: '#/definitions/ginresponse.JsonFormatterSwag'
      summary: Crée un utilisateur
      tags:
      - user
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: headers
    name: Authorization
    type: apiKey
swagger: "2.0"
