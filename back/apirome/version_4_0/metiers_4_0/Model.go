// Package rome40openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package metiers_4_0

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for AppellationClassification.
const (
	PRINCIPALE AppellationClassification = "PRINCIPALE"
	SYNONYME   AppellationClassification = "SYNONYME"
)

// Defines values for AppellationTransitionEcologiqueDetaillee.
const (
	AppellationTransitionEcologiqueDetailleeEMPLOIBLANC       AppellationTransitionEcologiqueDetaillee = "EMPLOI_BLANC"
	AppellationTransitionEcologiqueDetailleeEMPLOIBRUN        AppellationTransitionEcologiqueDetaillee = "EMPLOI_BRUN"
	AppellationTransitionEcologiqueDetailleeEMPLOISTRATEGIQUE AppellationTransitionEcologiqueDetaillee = "EMPLOI_STRATEGIQUE"
	AppellationTransitionEcologiqueDetailleeEMPLOIVERT        AppellationTransitionEcologiqueDetaillee = "EMPLOI_VERT"
)

// Defines values for CompetenceDetailleeRiasecMajeur.
const (
	CompetenceDetailleeRiasecMajeurA CompetenceDetailleeRiasecMajeur = "A"
	CompetenceDetailleeRiasecMajeurC CompetenceDetailleeRiasecMajeur = "C"
	CompetenceDetailleeRiasecMajeurE CompetenceDetailleeRiasecMajeur = "E"
	CompetenceDetailleeRiasecMajeurI CompetenceDetailleeRiasecMajeur = "I"
	CompetenceDetailleeRiasecMajeurR CompetenceDetailleeRiasecMajeur = "R"
	CompetenceDetailleeRiasecMajeurS CompetenceDetailleeRiasecMajeur = "S"
)

// Defines values for CompetenceDetailleeRiasecMineur.
const (
	CompetenceDetailleeRiasecMineurA CompetenceDetailleeRiasecMineur = "A"
	CompetenceDetailleeRiasecMineurC CompetenceDetailleeRiasecMineur = "C"
	CompetenceDetailleeRiasecMineurE CompetenceDetailleeRiasecMineur = "E"
	CompetenceDetailleeRiasecMineurI CompetenceDetailleeRiasecMineur = "I"
	CompetenceDetailleeRiasecMineurR CompetenceDetailleeRiasecMineur = "R"
	CompetenceDetailleeRiasecMineurS CompetenceDetailleeRiasecMineur = "S"
)

// Defines values for ContexteTravailCategorie.
const (
	CONDITIONSTRAVAIL     ContexteTravailCategorie = "CONDITIONS_TRAVAIL"
	HORAIREETDUREETRAVAIL ContexteTravailCategorie = "HORAIRE_ET_DUREE_TRAVAIL"
	LIEUETDEPLACEMENT     ContexteTravailCategorie = "LIEU_ET_DEPLACEMENT"
	STATUTEMPLOI          ContexteTravailCategorie = "STATUT_EMPLOI"
	TYPEBENEFICIAIRE      ContexteTravailCategorie = "TYPE_BENEFICIAIRE"
	TYPESTRUCTUREACCUEIL  ContexteTravailCategorie = "TYPE_STRUCTURE_ACCUEIL"
)

// Defines values for MacroSavoirEtreProfessionnelRiasecMajeur.
const (
	MacroSavoirEtreProfessionnelRiasecMajeurA MacroSavoirEtreProfessionnelRiasecMajeur = "A"
	MacroSavoirEtreProfessionnelRiasecMajeurC MacroSavoirEtreProfessionnelRiasecMajeur = "C"
	MacroSavoirEtreProfessionnelRiasecMajeurE MacroSavoirEtreProfessionnelRiasecMajeur = "E"
	MacroSavoirEtreProfessionnelRiasecMajeurI MacroSavoirEtreProfessionnelRiasecMajeur = "I"
	MacroSavoirEtreProfessionnelRiasecMajeurR MacroSavoirEtreProfessionnelRiasecMajeur = "R"
	MacroSavoirEtreProfessionnelRiasecMajeurS MacroSavoirEtreProfessionnelRiasecMajeur = "S"
)

// Defines values for MacroSavoirEtreProfessionnelRiasecMineur.
const (
	MacroSavoirEtreProfessionnelRiasecMineurA MacroSavoirEtreProfessionnelRiasecMineur = "A"
	MacroSavoirEtreProfessionnelRiasecMineurC MacroSavoirEtreProfessionnelRiasecMineur = "C"
	MacroSavoirEtreProfessionnelRiasecMineurE MacroSavoirEtreProfessionnelRiasecMineur = "E"
	MacroSavoirEtreProfessionnelRiasecMineurI MacroSavoirEtreProfessionnelRiasecMineur = "I"
	MacroSavoirEtreProfessionnelRiasecMineurR MacroSavoirEtreProfessionnelRiasecMineur = "R"
	MacroSavoirEtreProfessionnelRiasecMineurS MacroSavoirEtreProfessionnelRiasecMineur = "S"
)

// Defines values for MacroSavoirFaireRiasecMajeur.
const (
	MacroSavoirFaireRiasecMajeurA MacroSavoirFaireRiasecMajeur = "A"
	MacroSavoirFaireRiasecMajeurC MacroSavoirFaireRiasecMajeur = "C"
	MacroSavoirFaireRiasecMajeurE MacroSavoirFaireRiasecMajeur = "E"
	MacroSavoirFaireRiasecMajeurI MacroSavoirFaireRiasecMajeur = "I"
	MacroSavoirFaireRiasecMajeurR MacroSavoirFaireRiasecMajeur = "R"
	MacroSavoirFaireRiasecMajeurS MacroSavoirFaireRiasecMajeur = "S"
)

// Defines values for MacroSavoirFaireRiasecMineur.
const (
	MacroSavoirFaireRiasecMineurA MacroSavoirFaireRiasecMineur = "A"
	MacroSavoirFaireRiasecMineurC MacroSavoirFaireRiasecMineur = "C"
	MacroSavoirFaireRiasecMineurE MacroSavoirFaireRiasecMineur = "E"
	MacroSavoirFaireRiasecMineurI MacroSavoirFaireRiasecMineur = "I"
	MacroSavoirFaireRiasecMineurR MacroSavoirFaireRiasecMineur = "R"
	MacroSavoirFaireRiasecMineurS MacroSavoirFaireRiasecMineur = "S"
)

// Defines values for MetierRiasecMajeur.
const (
	MetierRiasecMajeurA MetierRiasecMajeur = "A"
	MetierRiasecMajeurC MetierRiasecMajeur = "C"
	MetierRiasecMajeurE MetierRiasecMajeur = "E"
	MetierRiasecMajeurI MetierRiasecMajeur = "I"
	MetierRiasecMajeurR MetierRiasecMajeur = "R"
	MetierRiasecMajeurS MetierRiasecMajeur = "S"
)

// Defines values for MetierRiasecMineur.
const (
	MetierRiasecMineurA MetierRiasecMineur = "A"
	MetierRiasecMineurC MetierRiasecMineur = "C"
	MetierRiasecMineurE MetierRiasecMineur = "E"
	MetierRiasecMineurI MetierRiasecMineur = "I"
	MetierRiasecMineurR MetierRiasecMineur = "R"
	MetierRiasecMineurS MetierRiasecMineur = "S"
)

// Defines values for MetierTransitionEcologiqueDetaillee.
const (
	MetierTransitionEcologiqueDetailleeEMPLOIBLANC       MetierTransitionEcologiqueDetaillee = "EMPLOI_BLANC"
	MetierTransitionEcologiqueDetailleeEMPLOIBRUN        MetierTransitionEcologiqueDetaillee = "EMPLOI_BRUN"
	MetierTransitionEcologiqueDetailleeEMPLOISTRATEGIQUE MetierTransitionEcologiqueDetaillee = "EMPLOI_STRATEGIQUE"
	MetierTransitionEcologiqueDetailleeEMPLOIVERT        MetierTransitionEcologiqueDetaillee = "EMPLOI_VERT"
)

// Defines values for ListerAppellationsParamsChamps.
const (
	ListerAppellationsParamsChampsAppellationescoLibelleuri                                                                                                                                                                                                          ListerAppellationsParamsChamps = "appellationesco(libelle,uri)"
	ListerAppellationsParamsChampsClassification                                                                                                                                                                                                                     ListerAppellationsParamsChamps = "classification"
	ListerAppellationsParamsChampsCode                                                                                                                                                                                                                               ListerAppellationsParamsChamps = "code"
	ListerAppellationsParamsChampsEmploicadre                                                                                                                                                                                                                        ListerAppellationsParamsChamps = "emploicadre"
	ListerAppellationsParamsChampsEmploireglemente                                                                                                                                                                                                                   ListerAppellationsParamsChamps = "emploireglemente"
	ListerAppellationsParamsChampsLibelle                                                                                                                                                                                                                            ListerAppellationsParamsChamps = "libelle"
	ListerAppellationsParamsChampsLibellecourt                                                                                                                                                                                                                       ListerAppellationsParamsChamps = "libellecourt"
	ListerAppellationsParamsChampsMetierEmploireglementelibelledomaineprofessionnelLibellecodegranddomaineLibellecodecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographique ListerAppellationsParamsChamps = "metier(emploireglemente,libelle,domaineprofessionnel(libelle,code,granddomaine(libelle,code)),code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique)"
	ListerAppellationsParamsChampsRomeparent                                                                                                                                                                                                                         ListerAppellationsParamsChamps = "romeparent"
	ListerAppellationsParamsChampsSecondaire                                                                                                                                                                                                                         ListerAppellationsParamsChamps = "secondaire"
	ListerAppellationsParamsChampsTransitiondemographique                                                                                                                                                                                                            ListerAppellationsParamsChamps = "transitiondemographique"
	ListerAppellationsParamsChampsTransitionecologique                                                                                                                                                                                                               ListerAppellationsParamsChamps = "transitionecologique"
	ListerAppellationsParamsChampsTransitionecologiquedetaillee                                                                                                                                                                                                      ListerAppellationsParamsChamps = "transitionecologiquedetaillee"
	ListerAppellationsParamsChampsTransitionnumerique                                                                                                                                                                                                                ListerAppellationsParamsChamps = "transitionnumerique"
)

// Defines values for RechercherAppellationParamsChamps.
const (
	RechercherAppellationParamsChampsAppellationescoLibelleuri                 RechercherAppellationParamsChamps = "appellationesco(libelle,uri)"
	RechercherAppellationParamsChampsClassification                            RechercherAppellationParamsChamps = "classification"
	RechercherAppellationParamsChampsCode                                      RechercherAppellationParamsChamps = "code"
	RechercherAppellationParamsChampsEmploicadre                               RechercherAppellationParamsChamps = "emploicadre"
	RechercherAppellationParamsChampsEmploireglemente                          RechercherAppellationParamsChamps = "emploireglemente"
	RechercherAppellationParamsChampsLibelle                                   RechercherAppellationParamsChamps = "libelle"
	RechercherAppellationParamsChampsMetierCodelibelleriasecmineurriasecmajeur RechercherAppellationParamsChamps = "metier(code,libelle,riasecmineur,riasecmajeur)"
	RechercherAppellationParamsChampsSecondaire                                RechercherAppellationParamsChamps = "secondaire"
	RechercherAppellationParamsChampsTransitiondemographique                   RechercherAppellationParamsChamps = "transitiondemographique"
	RechercherAppellationParamsChampsTransitionecologique                      RechercherAppellationParamsChamps = "transitionecologique"
	RechercherAppellationParamsChampsTransitionecologiquedetaillee             RechercherAppellationParamsChamps = "transitionecologiquedetaillee"
	RechercherAppellationParamsChampsTransitionnumerique                       RechercherAppellationParamsChamps = "transitionnumerique"
)

// Defines values for LireAppellationParamsChamps.
const (
	LireAppellationParamsChampsAppellationescoLibelleuri                                                                                                                                                                                                          LireAppellationParamsChamps = "appellationesco(libelle,uri)"
	LireAppellationParamsChampsAppellationsenvisageablesLibellecodemetierLibellecoderiasecmineurriasecmajeur                                                                                                                                                      LireAppellationParamsChamps = "appellationsenvisageables(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur))"
	LireAppellationParamsChampsAppellationsprochesLibellecodemetierLibellecoderiasecmineurriasecmajeur                                                                                                                                                            LireAppellationParamsChamps = "appellationsproches(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur))"
	LireAppellationParamsChampsClassification                                                                                                                                                                                                                     LireAppellationParamsChamps = "classification"
	LireAppellationParamsChampsCode                                                                                                                                                                                                                               LireAppellationParamsChamps = "code"
	LireAppellationParamsChampsCompetencesclesFrequencecompetenceLibelleMacrosavoiretreprofessionnelRiasecmineurriasecmajeurCompetencedetailleeRiasecmineurriasecmajeurcodeMacrosavoirfaireRiasecmineurriasecmajeurcodeogr                                        LireAppellationParamsChamps = "competencescles(frequence,competence(libelle,@macrosavoiretreprofessionnel(riasecmineur,riasecmajeur),@competencedetaillee(riasecmineur,riasecmajeur),code,@macrosavoirfaire(riasecmineur,riasecmajeur),codeogr))"
	LireAppellationParamsChampsDatefin                                                                                                                                                                                                                            LireAppellationParamsChamps = "datefin"
	LireAppellationParamsChampsEmploicadre                                                                                                                                                                                                                        LireAppellationParamsChamps = "emploicadre"
	LireAppellationParamsChampsEmploireglemente                                                                                                                                                                                                                   LireAppellationParamsChamps = "emploireglemente"
	LireAppellationParamsChampsLibelle                                                                                                                                                                                                                            LireAppellationParamsChamps = "libelle"
	LireAppellationParamsChampsLibellecourt                                                                                                                                                                                                                       LireAppellationParamsChamps = "libellecourt"
	LireAppellationParamsChampsMetierEmploireglementelibelledomaineprofessionnelLibellecodegranddomaineLibellecodecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographique LireAppellationParamsChamps = "metier(emploireglemente,libelle,domaineprofessionnel(libelle,code,granddomaine(libelle,code)),code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique)"
	LireAppellationParamsChampsMetiersenvisageablesLibellecoderiasecmineurriasecmajeur                                                                                                                                                                            LireAppellationParamsChamps = "metiersenvisageables(libelle,code,riasecmineur,riasecmajeur)"
	LireAppellationParamsChampsMetiersprochesLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                  LireAppellationParamsChamps = "metiersproches(libelle,code,riasecmineur,riasecmajeur)"
	LireAppellationParamsChampsObsolete                                                                                                                                                                                                                           LireAppellationParamsChamps = "obsolete"
	LireAppellationParamsChampsRomeparent                                                                                                                                                                                                                         LireAppellationParamsChamps = "romeparent"
	LireAppellationParamsChampsSecondaire                                                                                                                                                                                                                         LireAppellationParamsChamps = "secondaire"
	LireAppellationParamsChampsTransitiondemographique                                                                                                                                                                                                            LireAppellationParamsChamps = "transitiondemographique"
	LireAppellationParamsChampsTransitionecologique                                                                                                                                                                                                               LireAppellationParamsChamps = "transitionecologique"
	LireAppellationParamsChampsTransitionecologiquedetaillee                                                                                                                                                                                                      LireAppellationParamsChamps = "transitionecologiquedetaillee"
	LireAppellationParamsChampsTransitionnumerique                                                                                                                                                                                                                LireAppellationParamsChamps = "transitionnumerique"
)

// Defines values for ListerCentreInteretsParamsChamps.
const (
	ListerCentreInteretsParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                            ListerCentreInteretsParamsChamps = "code"
	ListerCentreInteretsParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                                      ListerCentreInteretsParamsChamps = "definition"
	ListerCentreInteretsParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                                         ListerCentreInteretsParamsChamps = "libelle"
	ListerCentreInteretsParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassification                              ListerCentreInteretsParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification))"
	ListerCentreInteretsParamsChampsMetiersliesPrincipalmetierEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent ListerCentreInteretsParamsChamps = "metierslies(principal,metier(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent)))"
)

// Defines values for LireCentreInteretParamsChamps.
const (
	LireCentreInteretParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                  LireCentreInteretParamsChamps = "code"
	LireCentreInteretParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                               LireCentreInteretParamsChamps = "datefin"
	LireCentreInteretParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                            LireCentreInteretParamsChamps = "definition"
	LireCentreInteretParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                               LireCentreInteretParamsChamps = "libelle"
	LireCentreInteretParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent          LireCentreInteretParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent))"
	LireCentreInteretParamsChampsMetiersliesPrincipalmetierEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassification LireCentreInteretParamsChamps = "metierslies(principal,metier(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification)))"
	LireCentreInteretParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                              LireCentreInteretParamsChamps = "obsolete"
)

// Defines values for ListerDomainesProfessionnelsParamsChamps.
const (
	ListerDomainesProfessionnelsParamsChampsCode                                                                                                                                                                                                                                                                                                       ListerDomainesProfessionnelsParamsChamps = "code"
	ListerDomainesProfessionnelsParamsChampsGranddomaineLibellecode                                                                                                                                                                                                                                                                                    ListerDomainesProfessionnelsParamsChamps = "granddomaine(libelle,code)"
	ListerDomainesProfessionnelsParamsChampsLibelle                                                                                                                                                                                                                                                                                                    ListerDomainesProfessionnelsParamsChamps = "libelle"
	ListerDomainesProfessionnelsParamsChampsMetiersLabeltransitionecologiquedetailleelibellecodeiscocoderiasecmineurtransitionecologiquetransitionnumeriqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparentriasecmajeur ListerDomainesProfessionnelsParamsChamps = "metiers(label,transitionecologiquedetaillee,libelle,codeisco,code,riasecmineur,transitionecologique,transitionnumerique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent),riasecmajeur)"
)

// Defines values for LireDomaineProfessionnelParamsChamps.
const (
	LireDomaineProfessionnelParamsChampsCode                                                                                                                                                                                                                                                                                                                                                         LireDomaineProfessionnelParamsChamps = "code"
	LireDomaineProfessionnelParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                      LireDomaineProfessionnelParamsChamps = "datefin"
	LireDomaineProfessionnelParamsChampsGranddomaineLibellecode                                                                                                                                                                                                                                                                                                                                      LireDomaineProfessionnelParamsChamps = "granddomaine(libelle,code)"
	LireDomaineProfessionnelParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                      LireDomaineProfessionnelParamsChamps = "libelle"
	LireDomaineProfessionnelParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent LireDomaineProfessionnelParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent))"
	LireDomaineProfessionnelParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                     LireDomaineProfessionnelParamsChamps = "obsolete"
)

// Defines values for ListerGrandDomainesParamsChamps.
const (
	ListerGrandDomainesParamsChampsCode                                                                                                                                                                                                                                                                                                                                       ListerGrandDomainesParamsChamps = "code"
	ListerGrandDomainesParamsChampsDomaineprofessionnelsLibellecodemetiersLabeltransitionecologiquedetailleelibellecodeiscocoderiasecmineurtransitionecologiquetransitionnumeriqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparentriasecmajeur ListerGrandDomainesParamsChamps = "domaineprofessionnels(libelle,code,metiers(label,transitionecologiquedetaillee,libelle,codeisco,code,riasecmineur,transitionecologique,transitionnumerique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent),riasecmajeur))"
	ListerGrandDomainesParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                    ListerGrandDomainesParamsChamps = "libelle"
)

// Defines values for LireGrandDomaineParamsChamps.
const (
	LireGrandDomaineParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                                         LireGrandDomaineParamsChamps = "code"
	LireGrandDomaineParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                                                      LireGrandDomaineParamsChamps = "datefin"
	LireGrandDomaineParamsChampsDomaineprofessionnelsLibellecodemetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent LireGrandDomaineParamsChamps = "domaineprofessionnels(libelle,code,metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent)))"
	LireGrandDomaineParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                                                      LireGrandDomaineParamsChamps = "libelle"
	LireGrandDomaineParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                                                     LireGrandDomaineParamsChamps = "obsolete"
)

// Defines values for ListerMetiersParamsChamps.
const (
	ListerMetiersParamsChampsAccesemploi                                                                                                                                                                                 ListerMetiersParamsChamps = "accesemploi"
	ListerMetiersParamsChampsAppellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparentlibellecourt ListerMetiersParamsChamps = "appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent,libellecourt)"
	ListerMetiersParamsChampsCode                                                                                                                                                                                        ListerMetiersParamsChamps = "code"
	ListerMetiersParamsChampsCodeisco                                                                                                                                                                                    ListerMetiersParamsChamps = "codeisco"
	ListerMetiersParamsChampsDefinition                                                                                                                                                                                  ListerMetiersParamsChamps = "definition"
	ListerMetiersParamsChampsDomaineprofessionnelLibellecodegranddomaineLibellecode                                                                                                                                      ListerMetiersParamsChamps = "domaineprofessionnel(libelle,code,granddomaine(libelle,code))"
	ListerMetiersParamsChampsEmploicadre                                                                                                                                                                                 ListerMetiersParamsChamps = "emploicadre"
	ListerMetiersParamsChampsEmploireglemente                                                                                                                                                                            ListerMetiersParamsChamps = "emploireglemente"
	ListerMetiersParamsChampsFormacodesLibellecode                                                                                                                                                                       ListerMetiersParamsChamps = "formacodes(libelle,code)"
	ListerMetiersParamsChampsLabel                                                                                                                                                                                       ListerMetiersParamsChamps = "label"
	ListerMetiersParamsChampsLibelle                                                                                                                                                                                     ListerMetiersParamsChamps = "libelle"
	ListerMetiersParamsChampsRiasecmajeur                                                                                                                                                                                ListerMetiersParamsChamps = "riasecmajeur"
	ListerMetiersParamsChampsRiasecmineur                                                                                                                                                                                ListerMetiersParamsChamps = "riasecmineur"
	ListerMetiersParamsChampsTransitiondemographique                                                                                                                                                                     ListerMetiersParamsChamps = "transitiondemographique"
	ListerMetiersParamsChampsTransitionecologique                                                                                                                                                                        ListerMetiersParamsChamps = "transitionecologique"
	ListerMetiersParamsChampsTransitionecologiquedetaillee                                                                                                                                                               ListerMetiersParamsChamps = "transitionecologiquedetaillee"
	ListerMetiersParamsChampsTransitionnumerique                                                                                                                                                                         ListerMetiersParamsChamps = "transitionnumerique"
)

// Defines values for RecherchermetierParamsChamps.
const (
	RecherchermetierParamsChampsCode         RecherchermetierParamsChamps = "code"
	RecherchermetierParamsChampsLibelle      RecherchermetierParamsChamps = "libelle"
	RecherchermetierParamsChampsRiasecmajeur RecherchermetierParamsChamps = "riasecmajeur"
	RecherchermetierParamsChampsRiasecmineur RecherchermetierParamsChamps = "riasecmineur"
)

// Defines values for LireMetierParamsChamps.
const (
	LireMetierParamsChampsAccesemploi                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 LireMetierParamsChamps = "accesemploi"
	LireMetierParamsChampsAppellationsEmploireglementelibellesecondairecodeemploicadretransitionnumeriqueclassificationcompetencesclesFrequencecompetenceLibellecodecodeogrtransitionecologiquedetailleeappellationsenvisageablesLibellecodemetierLibellecoderiasecmineurriasecmajeurmetiersprochesLibellecoderiasecmineurriasecmajeurmetiersenvisageablesLibellecoderiasecmineurriasecmajeurappellationsprochesLibellecodemetierLibellecoderiasecmineurriasecmajeurtransitionecologiquetransitiondemographiqueromeparentlibellecourt LireMetierParamsChamps = "appellations(emploireglemente,libelle,secondaire,code,emploicadre,transitionnumerique,classification,competencescles(frequence,competence(libelle,code,codeogr)),transitionecologiquedetaillee,appellationsenvisageables(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur)),metiersproches(libelle,code,riasecmineur,riasecmajeur),metiersenvisageables(libelle,code,riasecmineur,riasecmajeur),appellationsproches(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur)),transitionecologique,transitiondemographique,romeparent,libellecourt)"
	LireMetierParamsChampsAppellationsenvisageablesLibellecodemetierLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                               LireMetierParamsChamps = "appellationsenvisageables(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur))"
	LireMetierParamsChampsAppellationsprochesLibellecodemetierLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "appellationsproches(libelle,code,metier(libelle,code,riasecmineur,riasecmajeur))"
	LireMetierParamsChampsCentresinteretsLibellecodedefinition                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LireMetierParamsChamps = "centresinterets(libelle,code,definition)"
	LireMetierParamsChampsCentresinteretsliesCentreinteretLibellecodedefinitionprincipal                                                                                                                                                                                                                                                                                                                                                                                                                                              LireMetierParamsChamps = "centresinteretslies(centreinteret(libelle,code,definition),principal)"
	LireMetierParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LireMetierParamsChamps = "code"
	LireMetierParamsChampsCodeisco                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    LireMetierParamsChamps = "codeisco"
	LireMetierParamsChampsCompetencesmobiliseesLibelleMacrosavoiretreprofessionnelRiasecmineurriasecmajeurCompetencedetailleeRiasecmineurriasecmajeurcodeMacrosavoirfaireRiasecmineurriasecmajeurcodeogr                                                                                                                                                                                                                                                                                                                              LireMetierParamsChamps = "competencesmobilisees(libelle,@macrosavoiretreprofessionnel(riasecmineur,riasecmajeur),@competencedetaillee(riasecmineur,riasecmajeur),code,@macrosavoirfaire(riasecmineur,riasecmajeur),codeogr)"
	LireMetierParamsChampsCompetencesmobiliseesemergentesLibelleMacrosavoiretreprofessionnelRiasecmineurriasecmajeurCompetencedetailleeRiasecmineurriasecmajeurcodeMacrosavoirfaireRiasecmineurriasecmajeurcodeogr                                                                                                                                                                                                                                                                                                                    LireMetierParamsChamps = "competencesmobiliseesemergentes(libelle,@macrosavoiretreprofessionnel(riasecmineur,riasecmajeur),@competencedetaillee(riasecmineur,riasecmajeur),code,@macrosavoirfaire(riasecmineur,riasecmajeur),codeogr)"
	LireMetierParamsChampsCompetencesmobiliseesprincipalesLibelleMacrosavoiretreprofessionnelRiasecmineurriasecmajeurCompetencedetailleeRiasecmineurriasecmajeurcodeMacrosavoirfaireRiasecmineurriasecmajeurcodeogr                                                                                                                                                                                                                                                                                                                   LireMetierParamsChamps = "competencesmobiliseesprincipales(libelle,@macrosavoiretreprofessionnel(riasecmineur,riasecmajeur),@competencedetaillee(riasecmineur,riasecmajeur),code,@macrosavoirfaire(riasecmineur,riasecmajeur),codeogr)"
	LireMetierParamsChampsContextestravailLibellecodecategorie                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LireMetierParamsChamps = "contextestravail(libelle,code,categorie)"
	LireMetierParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "datefin"
	LireMetierParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  LireMetierParamsChamps = "definition"
	LireMetierParamsChampsDivisionsnafLibellecode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "divisionsnaf(libelle,code)"
	LireMetierParamsChampsDomaineprofessionnelLibellecodegranddomaineLibellecode                                                                                                                                                                                                                                                                                                                                                                                                                                                      LireMetierParamsChamps = "domaineprofessionnel(libelle,code,granddomaine(libelle,code))"
	LireMetierParamsChampsEmploicadre                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 LireMetierParamsChamps = "emploicadre"
	LireMetierParamsChampsEmploireglemente                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            LireMetierParamsChamps = "emploireglemente"
	LireMetierParamsChampsFormacodesLibellecode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       LireMetierParamsChamps = "formacodes(libelle,code)"
	LireMetierParamsChampsLabel                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       LireMetierParamsChamps = "label"
	LireMetierParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "libelle"
	LireMetierParamsChampsMetiersenproximiteLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                                                       LireMetierParamsChamps = "metiersenproximite(libelle,code,riasecmineur,riasecmajeur)"
	LireMetierParamsChampsMetiersenvisageablesLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "metiersenvisageables(libelle,code,riasecmineur,riasecmajeur)"
	LireMetierParamsChampsMetiersprochesLibellecoderiasecmineurriasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                                                           LireMetierParamsChamps = "metiersproches(libelle,code,riasecmineur,riasecmajeur)"
	LireMetierParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    LireMetierParamsChamps = "obsolete"
	LireMetierParamsChampsRiasecmajeur                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                LireMetierParamsChamps = "riasecmajeur"
	LireMetierParamsChampsRiasecmineur                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                LireMetierParamsChamps = "riasecmineur"
	LireMetierParamsChampsSecteursactivitesLibellecodesecteuractiviteLibellecodedefinitiondefinition                                                                                                                                                                                                                                                                                                                                                                                                                                  LireMetierParamsChamps = "secteursactivites(libelle,code,secteuractivite(libelle,code,definition),definition)"
	LireMetierParamsChampsSecteursactivitesliesSecteuractiviteLibellecodesecteuractiviteLibellecodedefinitiondefinitionprincipal                                                                                                                                                                                                                                                                                                                                                                                                      LireMetierParamsChamps = "secteursactiviteslies(secteuractivite(libelle,code,secteuractivite(libelle,code,definition),definition),principal)"
	LireMetierParamsChampsThemesLibellecode                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           LireMetierParamsChamps = "themes(libelle,code)"
	LireMetierParamsChampsTransitiondemographique                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     LireMetierParamsChamps = "transitiondemographique"
	LireMetierParamsChampsTransitionecologique                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        LireMetierParamsChamps = "transitionecologique"
	LireMetierParamsChampsTransitionecologiquedetaillee                                                                                                                                                                                                                                                                                                                                                                                                                                                                               LireMetierParamsChamps = "transitionecologiquedetaillee"
	LireMetierParamsChampsTransitionnumerique                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         LireMetierParamsChamps = "transitionnumerique"
)

// Defines values for ListerSecteurActivitesParamsChamps.
const (
	ListerSecteurActivitesParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                            ListerSecteurActivitesParamsChamps = "code"
	ListerSecteurActivitesParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                                      ListerSecteurActivitesParamsChamps = "definition"
	ListerSecteurActivitesParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                                         ListerSecteurActivitesParamsChamps = "libelle"
	ListerSecteurActivitesParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeParent                    ListerSecteurActivitesParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeParent))"
	ListerSecteurActivitesParamsChampsMetiersliesPrincipalmetierEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent ListerSecteurActivitesParamsChamps = "metierslies(principal,metier(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent)))"
	ListerSecteurActivitesParamsChampsSecteuractiviteLibellecodedefinition                                                                                                                                                                                                                                                                                                                                            ListerSecteurActivitesParamsChamps = "secteuractivite(libelle,code,definition)"
	ListerSecteurActivitesParamsChampsSoussecteursLibellecodedefinition                                                                                                                                                                                                                                                                                                                                               ListerSecteurActivitesParamsChamps = "soussecteurs(libelle,code,definition)"
)

// Defines values for LireSecteurActiviteParamsChamps.
const (
	LireSecteurActiviteParamsChampsCode                                                                                                                                                                                                                                                                                                                                                                            LireSecteurActiviteParamsChamps = "code"
	LireSecteurActiviteParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                                         LireSecteurActiviteParamsChamps = "datefin"
	LireSecteurActiviteParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                                      LireSecteurActiviteParamsChamps = "definition"
	LireSecteurActiviteParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                                         LireSecteurActiviteParamsChamps = "libelle"
	LireSecteurActiviteParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent                    LireSecteurActiviteParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent))"
	LireSecteurActiviteParamsChampsMetiersliesPrincipalmetierEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent LireSecteurActiviteParamsChamps = "metierslies(principal,metier(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent)))"
	LireSecteurActiviteParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                                        LireSecteurActiviteParamsChamps = "obsolete"
	LireSecteurActiviteParamsChampsSecteuractiviteLibellecodedefinition                                                                                                                                                                                                                                                                                                                                            LireSecteurActiviteParamsChamps = "secteuractivite(libelle,code,definition)"
	LireSecteurActiviteParamsChampsSoussecteursLibellecodedefinition                                                                                                                                                                                                                                                                                                                                               LireSecteurActiviteParamsChamps = "soussecteurs(libelle,code,definition)"
)

// Defines values for ListerThemesParamsChamps.
const (
	ListerThemesParamsChampsCode                                                                                                                                                                                                                                                                                                       ListerThemesParamsChamps = "code"
	ListerThemesParamsChampsDefinition                                                                                                                                                                                                                                                                                                 ListerThemesParamsChamps = "definition"
	ListerThemesParamsChampsLibelle                                                                                                                                                                                                                                                                                                    ListerThemesParamsChamps = "libelle"
	ListerThemesParamsChampsMetiersLabeltransitionecologiquedetailleelibellecodeiscocoderiasecmineurtransitionecologiquetransitionnumeriqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparentriasecmajeur ListerThemesParamsChamps = "metiers(label,transitionecologiquedetaillee,libelle,codeisco,code,riasecmineur,transitionecologique,transitionnumerique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent),riasecmajeur)"
)

// Defines values for LireThemeParamsChamps.
const (
	LireThemeParamsChampsCode                                                                                                                                                                                                                                                                                                                                                         LireThemeParamsChamps = "code"
	LireThemeParamsChampsDatefin                                                                                                                                                                                                                                                                                                                                                      LireThemeParamsChamps = "datefin"
	LireThemeParamsChampsDefinition                                                                                                                                                                                                                                                                                                                                                   LireThemeParamsChamps = "definition"
	LireThemeParamsChampsLibelle                                                                                                                                                                                                                                                                                                                                                      LireThemeParamsChamps = "libelle"
	LireThemeParamsChampsMetiersEmploireglementelibellecodeemploicadreriasecmineurtransitionnumeriqueriasecmajeurlabeltransitionecologiquedetailleecodeiscotransitionecologiquetransitiondemographiqueappellationsEmploireglementetransitionecologiquedetailleelibellesecondairecodeemploicadretransitionecologiquetransitionnumeriquetransitiondemographiqueclassificationromeparent LireThemeParamsChamps = "metiers(emploireglemente,libelle,code,emploicadre,riasecmineur,transitionnumerique,riasecmajeur,label,transitionecologiquedetaillee,codeisco,transitionecologique,transitiondemographique,appellations(emploireglemente,transitionecologiquedetaillee,libelle,secondaire,code,emploicadre,transitionecologique,transitionnumerique,transitiondemographique,classification,romeparent))"
	LireThemeParamsChampsObsolete                                                                                                                                                                                                                                                                                                                                                     LireThemeParamsChamps = "obsolete"
)

// Defines values for LireVersionParamsChamps.
const (
	LastModifiedDate        LireVersionParamsChamps = "lastModifiedDate"
	Version                 LireVersionParamsChamps = "version"
	VersionlastModifiedDate LireVersionParamsChamps = "version,lastModifiedDate"
)

// Appellation Appellation
type Appellation struct {
	// AppellationEsco Appellation ESCO (en provenance du référentiel 'ESCO')
	AppellationEsco *AppellationEsco `json:"appellationEsco,omitempty"`

	// AppellationsEnvisageables Liste des appellations envisageable. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	AppellationsEnvisageables *[]Appellation `json:"appellationsEnvisageables,omitempty"`

	// AppellationsProches Liste des appellations proches. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	AppellationsProches *[]Appellation `json:"appellationsProches,omitempty"`

	// Classification Classification.
	Classification *AppellationClassification `json:"classification,omitempty"`

	// Code Code unique de l'appellation.
	Code *string `json:"code,omitempty"`

	// CompetencesCles Liste des Compétences clés rattachées.
	CompetencesCles *[]CompetenceCle `json:"competencesCles,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// EmploiCadre Emploi cadre: oui/non. Ce champ est optionnel.
	EmploiCadre *bool `json:"emploiCadre,omitempty"`

	// EmploiReglemente Emploi règlementé: oui/non. Ce champ est optionnel.
	EmploiReglemente *bool `json:"emploiReglemente,omitempty"`

	// Libelle Libellé de l'appellation.
	Libelle *string `json:"libelle,omitempty"`

	// LibelleCourt Libellé court de l'appellation. Ce champ est optionnel.
	LibelleCourt *string `json:"libelleCourt,omitempty"`

	// Metier Métier
	Metier *Metier `json:"metier,omitempty"`

	// MetiersEnvisageables Liste des métiers envisageables. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	MetiersEnvisageables *[]Metier `json:"metiersEnvisageables,omitempty"`

	// MetiersProches Liste des métiers proches. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	MetiersProches *[]Metier `json:"metiersProches,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`

	// RomeParent Code rome du métier parent.
	RomeParent *string `json:"romeParent,omitempty"`

	// Secondaire Appellation secondaire: oui/non. Ce champ est optionnel.
	Secondaire *bool `json:"secondaire,omitempty"`

	// TransitionDemographique Transition démographique: oui/non. Ce champ est optionnel.
	TransitionDemographique *bool `json:"transitionDemographique,omitempty"`

	// TransitionEcologique Transition écologique: oui/non. Ce champ est optionnel.
	TransitionEcologique *bool `json:"transitionEcologique,omitempty"`

	// TransitionEcologiqueDetaillee Transition écologique détaillée. Ce champ est optionnel.
	TransitionEcologiqueDetaillee *AppellationTransitionEcologiqueDetaillee `json:"transitionEcologiqueDetaillee,omitempty"`

	// TransitionNumerique Transition numérique: oui/non. Ce champ est optionnel.
	TransitionNumerique *bool `json:"transitionNumerique,omitempty"`
}

// AppellationClassification Classification.
type AppellationClassification string

// AppellationTransitionEcologiqueDetaillee Transition écologique détaillée. Ce champ est optionnel.
type AppellationTransitionEcologiqueDetaillee string

// AppellationEsco Appellation ESCO (en provenance du référentiel 'ESCO')
type AppellationEsco struct {
	// Libelle Libellé de l'appellation ESCO.
	Libelle *string `json:"libelle,omitempty"`

	// Uri Uri unique de l'appellation ESCO.
	Uri *string `json:"uri,omitempty"`
}

// CentreInteret Centre d'intérêts
type CentreInteret struct {
	// Code Code unique du centre d'intérêt.
	Code *string `json:"code,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// Definition Définition du centre d'intérêt. Ce champs est optionnel.
	Definition *string `json:"definition,omitempty"`

	// Libelle Libellé du centre d'intérêts.
	Libelle *string `json:"libelle,omitempty"`

	// Metiers Liste des métiers liés. Cet attribut est déprécié, utiliser l'attribut metiersLies
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	Metiers *[]Metier `json:"metiers,omitempty"`

	// MetiersLies Liste des métiers liés.
	MetiersLies *[]LiaisonEntreMetierEtCentreInteret `json:"metiersLies,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`
}

// Competence Compétence (en provenance du référentiel 'Compétences'). Cette entité se décompose en quatre catégories : les macro-savoir-faires, les macro-savoir-êtres professionnels, les compétences détaillées et enfin les savoirs.
type Competence struct {
	// Code Code unique de la compétence.
	Code *string `json:"code,omitempty"`

	// CodeOgr Code OGR. Cet attribut est déprécié et n'est plus présent que pour des raisons de rétro-compatibilités
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CodeOgr *string `json:"codeOgr,omitempty"`

	// Libelle Libellé de la compétence.
	Libelle *string `json:"libelle,omitempty"`

	// Type Le type de l'objet. Il y a quatre valeurs possibles :
	// <ul>
	// <li>'MACRO-SAVOIR-FAIRE' pour un macro-savoir-faire</li>
	// <li>'MACRO-SAVOIR-ETRE-PROFESSIONNEL' pour un macro-savoir-être professionnel</li>
	// <li>'COMPETENCE-DETAILLEE' pour un compétence détaillée</li>
	// <li>'SAVOIR' pour un savoir</li>
	// </ul>
	Type *string `json:"type,omitempty"`
}

// CompetenceCle Compétence clé
type CompetenceCle struct {
	Competence *CompetenceCle_Competence `json:"competence,omitempty"`

	// Frequence Fréquence (entre 0 inclus et 100 inclus).
	Frequence *int32 `json:"frequence,omitempty"`
}

// CompetenceCle_Competence defines model for CompetenceCle.Competence.
type CompetenceCle_Competence struct {
	union json.RawMessage
}

// CompetenceDetaillee defines model for CompetenceDetaillee.
type CompetenceDetaillee struct {
	// Code Code unique de la compétence.
	Code *string `json:"code,omitempty"`

	// CodeOgr Code OGR. Cet attribut est déprécié et n'est plus présent que pour des raisons de rétro-compatibilités
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CodeOgr *string `json:"codeOgr,omitempty"`

	// Libelle Libellé de la compétence.
	Libelle *string `json:"libelle,omitempty"`

	// RiasecMajeur Riasec Majeur. Ce champ est optionnel.
	RiasecMajeur *CompetenceDetailleeRiasecMajeur `json:"riasecMajeur,omitempty"`

	// RiasecMineur Riasec Mineur. Ce champ est optionnel.
	RiasecMineur *CompetenceDetailleeRiasecMineur `json:"riasecMineur,omitempty"`

	// Type Cette propriété est forcément à la valeur 'COMPETENCE-DETAILLEE'.
	Type *string `json:"type,omitempty"`
}

// CompetenceDetailleeRiasecMajeur Riasec Majeur. Ce champ est optionnel.
type CompetenceDetailleeRiasecMajeur string

// CompetenceDetailleeRiasecMineur Riasec Mineur. Ce champ est optionnel.
type CompetenceDetailleeRiasecMineur string

// ContexteTravail Contexte de travail (en provenance du référentiel 'Situations de travail')
type ContexteTravail struct {
	// Categorie Catégorie de contexte de travail.
	Categorie *ContexteTravailCategorie `json:"categorie,omitempty"`

	// Code Code unique du contexte de travail.
	Code *string `json:"code,omitempty"`

	// Libelle Libellé du contexte de travail.
	Libelle *string `json:"libelle,omitempty"`
}

// ContexteTravailCategorie Catégorie de contexte de travail.
type ContexteTravailCategorie string

// DivisionNaf Division NAF (en provenance du référentiel 'NAF')
type DivisionNaf struct {
	// Code Code unique de la division NAF.
	Code *string `json:"code,omitempty"`

	// Libelle Libellé de la division NAF.
	Libelle *string `json:"libelle,omitempty"`
}

// DomaineProfessionnel Domaine professionnel
type DomaineProfessionnel struct {
	// Code Code unique du domaine professionnel.
	Code *string `json:"code,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// GrandDomaine Grand Domaine
	GrandDomaine *GrandDomaine `json:"grandDomaine,omitempty"`

	// Libelle Libellé du domaine professionnel.
	Libelle *string `json:"libelle,omitempty"`

	// Metiers Liste des métiers rattachés.
	Metiers *[]Metier `json:"metiers,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`
}

// Formacode Formacode (en provenance du référentiel 'FORMACODES V14')
type Formacode struct {
	// Code Code unique du formacode V14.
	Code *string `json:"code,omitempty"`

	// Libelle Libellé du formacode.
	Libelle *string `json:"libelle,omitempty"`
}

// GrandDomaine Grand Domaine
type GrandDomaine struct {
	// Code Code unique du grand domaine.
	Code *string `json:"code,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// DomaineProfessionnels Liste des domaines professionnels rattachés.
	DomaineProfessionnels *[]DomaineProfessionnel `json:"domaineProfessionnels,omitempty"`

	// Libelle Libellé du grand domaine.
	Libelle *string `json:"libelle,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`
}

// LiaisonEntreMetierEtCentreInteret Liaison entre un métier et un centre d'intérêt
type LiaisonEntreMetierEtCentreInteret struct {
	// CentreInteret Centre d'intérêts
	CentreInteret *CentreInteret `json:"centreInteret,omitempty"`

	// Metier Métier
	Metier *Metier `json:"metier,omitempty"`

	// Principal Principal: oui/non.
	Principal *bool `json:"principal,omitempty"`
}

// LiaisonEntreMetierEtSecteurActivite Liaison entre un métier et un secteur d'activité
type LiaisonEntreMetierEtSecteurActivite struct {
	// Metier Métier
	Metier *Metier `json:"metier,omitempty"`

	// Principal Principal: oui/non.
	Principal *bool `json:"principal,omitempty"`

	// SecteurActivite Secteur d'activités. Il y a seulement deux niveaux de secteur d'activités: l'un qui dispose de sous-secteurs d'activités et l'autre qui dispose d'un secteur d'activité parent et de métiers rattachés.
	SecteurActivite *SecteurActivite `json:"secteurActivite,omitempty"`
}

// MacroSavoirEtreProfessionnel defines model for MacroSavoirEtreProfessionnel.
type MacroSavoirEtreProfessionnel struct {
	// Code Code unique de la compétence.
	Code *string `json:"code,omitempty"`

	// CodeOgr Code OGR. Cet attribut est déprécié et n'est plus présent que pour des raisons de rétro-compatibilités
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CodeOgr *string `json:"codeOgr,omitempty"`

	// Libelle Libellé de la compétence.
	Libelle *string `json:"libelle,omitempty"`

	// RiasecMajeur Riasec Majeur. Ce champ est optionnel.
	RiasecMajeur *MacroSavoirEtreProfessionnelRiasecMajeur `json:"riasecMajeur,omitempty"`

	// RiasecMineur Riasec Mineur. Ce champ est optionnel.
	RiasecMineur *MacroSavoirEtreProfessionnelRiasecMineur `json:"riasecMineur,omitempty"`

	// Type Cette propriété est forcément à la valeur 'MACRO-SAVOIR-ETRE-PROFESSIONNEL'.
	Type *string `json:"type,omitempty"`
}

// MacroSavoirEtreProfessionnelRiasecMajeur Riasec Majeur. Ce champ est optionnel.
type MacroSavoirEtreProfessionnelRiasecMajeur string

// MacroSavoirEtreProfessionnelRiasecMineur Riasec Mineur. Ce champ est optionnel.
type MacroSavoirEtreProfessionnelRiasecMineur string

// MacroSavoirFaire defines model for MacroSavoirFaire.
type MacroSavoirFaire struct {
	// Code Code unique de la compétence.
	Code *string `json:"code,omitempty"`

	// CodeOgr Code OGR. Cet attribut est déprécié et n'est plus présent que pour des raisons de rétro-compatibilités
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CodeOgr *string `json:"codeOgr,omitempty"`

	// Libelle Libellé de la compétence.
	Libelle *string `json:"libelle,omitempty"`

	// RiasecMajeur Riasec Majeur. Ce champ est optionnel.
	RiasecMajeur *MacroSavoirFaireRiasecMajeur `json:"riasecMajeur,omitempty"`

	// RiasecMineur Riasec Mineur. Ce champ est optionnel.
	RiasecMineur *MacroSavoirFaireRiasecMineur `json:"riasecMineur,omitempty"`

	// Type Cette propriété est forcément à la valeur 'MACRO-SAVOIR-FAIRE'.
	Type *string `json:"type,omitempty"`
}

// MacroSavoirFaireRiasecMajeur Riasec Majeur. Ce champ est optionnel.
type MacroSavoirFaireRiasecMajeur string

// MacroSavoirFaireRiasecMineur Riasec Mineur. Ce champ est optionnel.
type MacroSavoirFaireRiasecMineur string

// Metier Métier
type Metier struct {
	// AccesEmploi Acces emploi.
	AccesEmploi *string `json:"accesEmploi,omitempty"`

	// Appellations Liste des appellations rattachées.
	Appellations *[]Appellation `json:"appellations,omitempty"`

	// AppellationsEnvisageables Liste des appellations envisageable. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	AppellationsEnvisageables *[]Appellation `json:"appellationsEnvisageables,omitempty"`

	// AppellationsProches Liste des appellations proches. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	AppellationsProches *[]Appellation `json:"appellationsProches,omitempty"`

	// CentresInterets Liste des centres d'intérêts liés. Cet attribut est déprécié, utiliser l'attribut centresInteretsLies
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CentresInterets *[]CentreInteret `json:"centresInterets,omitempty"`

	// CentresInteretsLies Liste des centres d'intérêts liés.
	CentresInteretsLies *[]LiaisonEntreMetierEtCentreInteret `json:"centresInteretsLies,omitempty"`

	// Code Code unique du métier.
	Code *string `json:"code,omitempty"`

	// CodeIsco Code ISCO (International Standard Classification of Occupations ou CITP en français). Ce champ est optionnel.
	CodeIsco *string `json:"codeIsco,omitempty"`

	// CompetencesMobilisees Liste des compétences mobilisées ni principales ni emergentes.
	CompetencesMobilisees *[]Metier_CompetencesMobilisees_Item `json:"competencesMobilisees,omitempty"`

	// CompetencesMobiliseesEmergentes Liste des compétences mobilisées.
	CompetencesMobiliseesEmergentes *[]Metier_CompetencesMobiliseesEmergentes_Item `json:"competencesMobiliseesEmergentes,omitempty"`

	// CompetencesMobiliseesPrincipales Liste des compétences mobilisées.
	CompetencesMobiliseesPrincipales *[]Metier_CompetencesMobiliseesPrincipales_Item `json:"competencesMobiliseesPrincipales,omitempty"`

	// ContextesTravail Liste des contextes de travail liés.
	ContextesTravail *[]ContexteTravail `json:"contextesTravail,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// Definition Définition.
	Definition *string `json:"definition,omitempty"`

	// DivisionsNaf Liste des divisions NAF liées.
	DivisionsNaf *[]DivisionNaf `json:"divisionsNaf,omitempty"`

	// DomaineProfessionnel Domaine professionnel
	DomaineProfessionnel *DomaineProfessionnel `json:"domaineProfessionnel,omitempty"`

	// EmploiCadre Emploi cadre: oui/non. Ce champ est optionnel.
	EmploiCadre *bool `json:"emploiCadre,omitempty"`

	// EmploiReglemente Emploi réglementé: oui/non. Ce champ est optionnel.
	EmploiReglemente *bool `json:"emploiReglemente,omitempty"`

	// Formacodes Liste des formacodes liés.
	Formacodes *[]Formacode `json:"formacodes,omitempty"`

	// Label Label (code métier d'origine). Cette valeur est utilisée dans le cas où un métier a été divisé en plusieurs métiers. Ce champ est optionnel.
	Label *string `json:"label,omitempty"`

	// Libelle Libellé du métier.
	Libelle *string `json:"libelle,omitempty"`

	// MetiersEnProximite Liste des métiers en proximité.
	MetiersEnProximite *[]Metier `json:"metiersEnProximite,omitempty"`

	// MetiersEnvisageables Liste des métiers envisageables. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	MetiersEnvisageables *[]Metier `json:"metiersEnvisageables,omitempty"`

	// MetiersProches Liste des métiers proches. Cette mobilité est obsolète mais conservée pour compatibilité ascendante.
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	MetiersProches *[]Metier `json:"metiersProches,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`

	// RiasecMajeur Riasec Majeur. Ce champ est optionnel.
	RiasecMajeur *MetierRiasecMajeur `json:"riasecMajeur,omitempty"`

	// RiasecMineur Riasec Mineur. Ce champ est optionnel.
	RiasecMineur *MetierRiasecMineur `json:"riasecMineur,omitempty"`

	// SecteursActivites Liste des secteurs d'activites liés. Cet attribut est déprécié, utiliser l'attribut secteursActivitesLies
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	SecteursActivites *[]SecteurActivite `json:"secteursActivites,omitempty"`

	// SecteursActivitesLies Liste des centres d'intérêts liés.
	SecteursActivitesLies *[]LiaisonEntreMetierEtSecteurActivite `json:"secteursActivitesLies,omitempty"`

	// Themes Liste des thèmes liés.
	Themes *[]Theme `json:"themes,omitempty"`

	// TransitionDemographique Transition démographique: oui/non. Ce champ est optionnel.
	TransitionDemographique *bool `json:"transitionDemographique,omitempty"`

	// TransitionEcologique Transition écologique: oui/non. Ce champ est optionnel.
	TransitionEcologique *bool `json:"transitionEcologique,omitempty"`

	// TransitionEcologiqueDetaillee Transition écologique détaillée. Ce champ est optionnel.
	TransitionEcologiqueDetaillee *MetierTransitionEcologiqueDetaillee `json:"transitionEcologiqueDetaillee,omitempty"`

	// TransitionNumerique Transition numérique: oui/non. Ce champ est optionnel.
	TransitionNumerique *bool `json:"transitionNumerique,omitempty"`
}

// Metier_CompetencesMobilisees_Item defines model for Metier.competencesMobilisees.Item.
type Metier_CompetencesMobilisees_Item struct {
	union json.RawMessage
}

// Metier_CompetencesMobiliseesEmergentes_Item defines model for Metier.competencesMobiliseesEmergentes.Item.
type Metier_CompetencesMobiliseesEmergentes_Item struct {
	union json.RawMessage
}

// Metier_CompetencesMobiliseesPrincipales_Item defines model for Metier.competencesMobiliseesPrincipales.Item.
type Metier_CompetencesMobiliseesPrincipales_Item struct {
	union json.RawMessage
}

// MetierRiasecMajeur Riasec Majeur. Ce champ est optionnel.
type MetierRiasecMajeur string

// MetierRiasecMineur Riasec Mineur. Ce champ est optionnel.
type MetierRiasecMineur string

// MetierTransitionEcologiqueDetaillee Transition écologique détaillée. Ce champ est optionnel.
type MetierTransitionEcologiqueDetaillee string

// Savoir defines model for Savoir.
type Savoir struct {
	// Code Code unique de la compétence.
	Code *string `json:"code,omitempty"`

	// CodeOgr Code OGR. Cet attribut est déprécié et n'est plus présent que pour des raisons de rétro-compatibilités
	// Deprecated: this property has been marked as deprecated upstream, but no `x-deprecated-reason` was set
	CodeOgr *string `json:"codeOgr,omitempty"`

	// Libelle Libellé de la compétence.
	Libelle *string `json:"libelle,omitempty"`

	// Type Cette propriété est forcément à la valeur 'SAVOIR'.
	Type *string `json:"type,omitempty"`
}

// SecteurActivite Secteur d'activités. Il y a seulement deux niveaux de secteur d'activités: l'un qui dispose de sous-secteurs d'activités et l'autre qui dispose d'un secteur d'activité parent et de métiers rattachés.
type SecteurActivite struct {
	// Code Code unique du secteur d'activité.
	Code *string `json:"code,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// Definition Définition du secteur d'activité. Ce champ est optionnel.
	Definition *string `json:"definition,omitempty"`

	// Libelle Libellé du secteur d'activité.
	Libelle *string `json:"libelle,omitempty"`

	// MetiersLies Liste des métiers liés.
	MetiersLies *[]LiaisonEntreMetierEtSecteurActivite `json:"metiersLies,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`

	// SecteurActivite Secteur d'activités. Il y a seulement deux niveaux de secteur d'activités: l'un qui dispose de sous-secteurs d'activités et l'autre qui dispose d'un secteur d'activité parent et de métiers rattachés.
	SecteurActivite *SecteurActivite `json:"secteurActivite,omitempty"`

	// SousSecteurs Sous-secteur d'activités rattachés.
	SousSecteurs *[]SecteurActivite `json:"sousSecteurs,omitempty"`
}

// Theme Thème
type Theme struct {
	// Code Code unique du thème.
	Code *string `json:"code,omitempty"`

	// DateFin date de fin de validité (renseignée si l'entité est obsolete)
	DateFin *time.Time `json:"dateFin,omitempty"`

	// Definition Définition du thème. Ce champs est optionnel.
	Definition *string `json:"definition,omitempty"`

	// Libelle Libellé du thème.
	Libelle *string `json:"libelle,omitempty"`

	// Metiers Métiers rattachés.
	Metiers *[]Metier `json:"metiers,omitempty"`

	// Obsolete boolean définissant si l'entité est obsolete
	Obsolete *bool `json:"obsolete,omitempty"`
}

// VersionRome Version du rome
type VersionRome struct {
	// LastModifiedDate La date de dernière modification de la version.
	LastModifiedDate *time.Time `json:"lastModifiedDate,omitempty"`

	// Version La version actuelle.
	Version *string `json:"version,omitempty"`
}

// ListerAppellationsParams defines parameters for ListerAppellations.
type ListerAppellationsParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerAppellationsParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                          `json:"Authorization"`
}

// ListerAppellationsParamsChamps defines parameters for ListerAppellations.
type ListerAppellationsParamsChamps string

// RechercherAppellationParams defines parameters for RechercherAppellation.
type RechercherAppellationParams struct {
	// Q Le(s) mot(s) et/ou début de mot(s) recherché(s).
	Q string `form:"q" json:"q"`

	// Qf Les indexe(s) de recherche (query fields). Si non précisé, on cherche sur le code et libellé.
	Qf *string `form:"qf,omitempty" json:"qf,omitempty"`

	// Fq Les filtre(s) de recherche (filters query). Ex : fq=code:1 AND (code:2 OR libelle:app). Si non précisé, aucun filtre n'est appliqué.
	Fq *string `form:"fq,omitempty" json:"fq,omitempty"`

	// Op Lorsque plusieurs mots sont présents dans la recherche (q=mot1 mot2), indique si au moins 1 mot doit correspondre 'OR' ou s'ils doivent tous correspondre 'AND'. Si non précisé, 'OR' est utilisé
	Op *string `form:"op,omitempty" json:"op,omitempty"`

	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *RechercherAppellationParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                             `json:"Authorization"`
}

// RechercherAppellationParamsChamps defines parameters for RechercherAppellation.
type RechercherAppellationParamsChamps string

// LireAppellationParams defines parameters for LireAppellation.
type LireAppellationParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireAppellationParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireAppellationParamsChamps defines parameters for LireAppellation.
type LireAppellationParamsChamps string

// ListerCentreInteretsParams defines parameters for ListerCentreInterets.
type ListerCentreInteretsParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerCentreInteretsParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                            `json:"Authorization"`
}

// ListerCentreInteretsParamsChamps defines parameters for ListerCentreInterets.
type ListerCentreInteretsParamsChamps string

// LireCentreInteretParams defines parameters for LireCentreInteret.
type LireCentreInteretParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireCentreInteretParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireCentreInteretParamsChamps defines parameters for LireCentreInteret.
type LireCentreInteretParamsChamps string

// ListerDomainesProfessionnelsParams defines parameters for ListerDomainesProfessionnels.
type ListerDomainesProfessionnelsParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerDomainesProfessionnelsParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                                    `json:"Authorization"`
}

// ListerDomainesProfessionnelsParamsChamps defines parameters for ListerDomainesProfessionnels.
type ListerDomainesProfessionnelsParamsChamps string

// LireDomaineProfessionnelParams defines parameters for LireDomaineProfessionnel.
type LireDomaineProfessionnelParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireDomaineProfessionnelParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireDomaineProfessionnelParamsChamps defines parameters for LireDomaineProfessionnel.
type LireDomaineProfessionnelParamsChamps string

// ListerGrandDomainesParams defines parameters for ListerGrandDomaines.
type ListerGrandDomainesParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerGrandDomainesParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                           `json:"Authorization"`
}

// ListerGrandDomainesParamsChamps defines parameters for ListerGrandDomaines.
type ListerGrandDomainesParamsChamps string

// LireGrandDomaineParams defines parameters for LireGrandDomaine.
type LireGrandDomaineParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireGrandDomaineParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireGrandDomaineParamsChamps defines parameters for LireGrandDomaine.
type LireGrandDomaineParamsChamps string

// ListerMetiersParams defines parameters for ListerMetiers.
type ListerMetiersParams struct {
	// RiasecMajeur Riasec majeur.
	RiasecMajeur *string `form:"riasec-majeur,omitempty" json:"riasec-majeur,omitempty"`

	// RiasecMineur Riasec mineur.
	RiasecMineur *string `form:"riasec-mineur,omitempty" json:"riasec-mineur,omitempty"`

	// CodeNaf Code de la division NAF.
	CodeNaf *string `form:"code-naf,omitempty" json:"code-naf,omitempty"`

	// CodeCompetence Code compétence.
	CodeCompetence *string `form:"code-competence,omitempty" json:"code-competence,omitempty"`

	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerMetiersParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                     `json:"Authorization"`
}

// ListerMetiersParamsChamps defines parameters for ListerMetiers.
type ListerMetiersParamsChamps string

// RecherchermetierParams defines parameters for Recherchermetier.
type RecherchermetierParams struct {
	// Q Le(s) mot(s) et/ou début de mot(s) recherché(s).
	Q string `form:"q" json:"q"`

	// Qf Les indexe(s) de recherche (query fields). Si non précisé, on cherche sur le code et libellé.
	Qf *string `form:"qf,omitempty" json:"qf,omitempty"`

	// Fq Les filtre(s) de recherche (filters query). Ex : fq=code:1 AND (code:2 OR libelle:app). Si non précisé, aucun filtre n'est appliqué.
	Fq *string `form:"fq,omitempty" json:"fq,omitempty"`

	// Op Lorsque plusieurs mots sont présents dans la recherche (q=mot1 mot2), indique si au moins 1 mot doit correspondre 'OR' ou s'ils doivent tous correspondre 'AND'. Si non précisé, 'OR' est utilisé
	Op *string `form:"op,omitempty" json:"op,omitempty"`

	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider de l'exemple de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *RecherchermetierParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                        `json:"Authorization"`
}

// RecherchermetierParamsChamps defines parameters for Recherchermetier.
type RecherchermetierParamsChamps string

// LireMetierParams defines parameters for LireMetier.
type LireMetierParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireMetierParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireMetierParamsChamps defines parameters for LireMetier.
type LireMetierParamsChamps string

// ListerSecteurActivitesParams defines parameters for ListerSecteurActivites.
type ListerSecteurActivitesParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerSecteurActivitesParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                              `json:"Authorization"`
}

// ListerSecteurActivitesParamsChamps defines parameters for ListerSecteurActivites.
type ListerSecteurActivitesParamsChamps string

// LireSecteurActiviteParams defines parameters for LireSecteurActivite.
type LireSecteurActiviteParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireSecteurActiviteParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireSecteurActiviteParamsChamps defines parameters for LireSecteurActivite.
type LireSecteurActiviteParamsChamps string

// ListerThemesParams defines parameters for ListerThemes.
type ListerThemesParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *ListerThemesParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                    `json:"Authorization"`
}

// ListerThemesParamsChamps defines parameters for ListerThemes.
type ListerThemesParamsChamps string

// LireThemeParams defines parameters for LireTheme.
type LireThemeParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs *LireThemeParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`

	// Date Date de la recherche au format yyyy-MM-dd ou yyyyMMdd.
	Date          *openapi_types.Date `form:"date,omitempty" json:"date,omitempty"`
	Authorization string              `json:"Authorization"`
}

// LireThemeParamsChamps defines parameters for LireTheme.
type LireThemeParamsChamps string

// LireVersionParams defines parameters for LireVersion.
type LireVersionParams struct {
	// Champs Sélecteur de champs : il est possible de paramétrer le retour de la requête en définissant les champs souhaités (liste exhaustive des champs possibles : `Allowed values`). <br/> Vous pouvez vous aider des exemples de réponse pour identifier les champs que vous voulez récupérer.
	Champs        *LireVersionParamsChamps `form:"champs,omitempty" json:"champs,omitempty"`
	Authorization string                   `json:"Authorization"`
}

// LireVersionParamsChamps defines parameters for LireVersion.
type LireVersionParamsChamps string

// AsCompetenceDetaillee returns the union data inside the CompetenceCle_Competence as a CompetenceDetaillee
func (t CompetenceCle_Competence) AsCompetenceDetaillee() (CompetenceDetaillee, error) {
	var body CompetenceDetaillee
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCompetenceDetaillee overwrites any union data inside the CompetenceCle_Competence as the provided CompetenceDetaillee
func (t *CompetenceCle_Competence) FromCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCompetenceDetaillee performs a merge with any union data inside the CompetenceCle_Competence, using the provided CompetenceDetaillee
func (t *CompetenceCle_Competence) MergeCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirEtreProfessionnel returns the union data inside the CompetenceCle_Competence as a MacroSavoirEtreProfessionnel
func (t CompetenceCle_Competence) AsMacroSavoirEtreProfessionnel() (MacroSavoirEtreProfessionnel, error) {
	var body MacroSavoirEtreProfessionnel
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirEtreProfessionnel overwrites any union data inside the CompetenceCle_Competence as the provided MacroSavoirEtreProfessionnel
func (t *CompetenceCle_Competence) FromMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirEtreProfessionnel performs a merge with any union data inside the CompetenceCle_Competence, using the provided MacroSavoirEtreProfessionnel
func (t *CompetenceCle_Competence) MergeMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirFaire returns the union data inside the CompetenceCle_Competence as a MacroSavoirFaire
func (t CompetenceCle_Competence) AsMacroSavoirFaire() (MacroSavoirFaire, error) {
	var body MacroSavoirFaire
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirFaire overwrites any union data inside the CompetenceCle_Competence as the provided MacroSavoirFaire
func (t *CompetenceCle_Competence) FromMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirFaire performs a merge with any union data inside the CompetenceCle_Competence, using the provided MacroSavoirFaire
func (t *CompetenceCle_Competence) MergeMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSavoir returns the union data inside the CompetenceCle_Competence as a Savoir
func (t CompetenceCle_Competence) AsSavoir() (Savoir, error) {
	var body Savoir
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSavoir overwrites any union data inside the CompetenceCle_Competence as the provided Savoir
func (t *CompetenceCle_Competence) FromSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSavoir performs a merge with any union data inside the CompetenceCle_Competence, using the provided Savoir
func (t *CompetenceCle_Competence) MergeSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CompetenceCle_Competence) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CompetenceCle_Competence) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCompetenceDetaillee returns the union data inside the Metier_CompetencesMobilisees_Item as a CompetenceDetaillee
func (t Metier_CompetencesMobilisees_Item) AsCompetenceDetaillee() (CompetenceDetaillee, error) {
	var body CompetenceDetaillee
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCompetenceDetaillee overwrites any union data inside the Metier_CompetencesMobilisees_Item as the provided CompetenceDetaillee
func (t *Metier_CompetencesMobilisees_Item) FromCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCompetenceDetaillee performs a merge with any union data inside the Metier_CompetencesMobilisees_Item, using the provided CompetenceDetaillee
func (t *Metier_CompetencesMobilisees_Item) MergeCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirEtreProfessionnel returns the union data inside the Metier_CompetencesMobilisees_Item as a MacroSavoirEtreProfessionnel
func (t Metier_CompetencesMobilisees_Item) AsMacroSavoirEtreProfessionnel() (MacroSavoirEtreProfessionnel, error) {
	var body MacroSavoirEtreProfessionnel
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirEtreProfessionnel overwrites any union data inside the Metier_CompetencesMobilisees_Item as the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobilisees_Item) FromMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirEtreProfessionnel performs a merge with any union data inside the Metier_CompetencesMobilisees_Item, using the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobilisees_Item) MergeMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirFaire returns the union data inside the Metier_CompetencesMobilisees_Item as a MacroSavoirFaire
func (t Metier_CompetencesMobilisees_Item) AsMacroSavoirFaire() (MacroSavoirFaire, error) {
	var body MacroSavoirFaire
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirFaire overwrites any union data inside the Metier_CompetencesMobilisees_Item as the provided MacroSavoirFaire
func (t *Metier_CompetencesMobilisees_Item) FromMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirFaire performs a merge with any union data inside the Metier_CompetencesMobilisees_Item, using the provided MacroSavoirFaire
func (t *Metier_CompetencesMobilisees_Item) MergeMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSavoir returns the union data inside the Metier_CompetencesMobilisees_Item as a Savoir
func (t Metier_CompetencesMobilisees_Item) AsSavoir() (Savoir, error) {
	var body Savoir
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSavoir overwrites any union data inside the Metier_CompetencesMobilisees_Item as the provided Savoir
func (t *Metier_CompetencesMobilisees_Item) FromSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSavoir performs a merge with any union data inside the Metier_CompetencesMobilisees_Item, using the provided Savoir
func (t *Metier_CompetencesMobilisees_Item) MergeSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Metier_CompetencesMobilisees_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Metier_CompetencesMobilisees_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCompetenceDetaillee returns the union data inside the Metier_CompetencesMobiliseesEmergentes_Item as a CompetenceDetaillee
func (t Metier_CompetencesMobiliseesEmergentes_Item) AsCompetenceDetaillee() (CompetenceDetaillee, error) {
	var body CompetenceDetaillee
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCompetenceDetaillee overwrites any union data inside the Metier_CompetencesMobiliseesEmergentes_Item as the provided CompetenceDetaillee
func (t *Metier_CompetencesMobiliseesEmergentes_Item) FromCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCompetenceDetaillee performs a merge with any union data inside the Metier_CompetencesMobiliseesEmergentes_Item, using the provided CompetenceDetaillee
func (t *Metier_CompetencesMobiliseesEmergentes_Item) MergeCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirEtreProfessionnel returns the union data inside the Metier_CompetencesMobiliseesEmergentes_Item as a MacroSavoirEtreProfessionnel
func (t Metier_CompetencesMobiliseesEmergentes_Item) AsMacroSavoirEtreProfessionnel() (MacroSavoirEtreProfessionnel, error) {
	var body MacroSavoirEtreProfessionnel
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirEtreProfessionnel overwrites any union data inside the Metier_CompetencesMobiliseesEmergentes_Item as the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobiliseesEmergentes_Item) FromMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirEtreProfessionnel performs a merge with any union data inside the Metier_CompetencesMobiliseesEmergentes_Item, using the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobiliseesEmergentes_Item) MergeMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirFaire returns the union data inside the Metier_CompetencesMobiliseesEmergentes_Item as a MacroSavoirFaire
func (t Metier_CompetencesMobiliseesEmergentes_Item) AsMacroSavoirFaire() (MacroSavoirFaire, error) {
	var body MacroSavoirFaire
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirFaire overwrites any union data inside the Metier_CompetencesMobiliseesEmergentes_Item as the provided MacroSavoirFaire
func (t *Metier_CompetencesMobiliseesEmergentes_Item) FromMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirFaire performs a merge with any union data inside the Metier_CompetencesMobiliseesEmergentes_Item, using the provided MacroSavoirFaire
func (t *Metier_CompetencesMobiliseesEmergentes_Item) MergeMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSavoir returns the union data inside the Metier_CompetencesMobiliseesEmergentes_Item as a Savoir
func (t Metier_CompetencesMobiliseesEmergentes_Item) AsSavoir() (Savoir, error) {
	var body Savoir
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSavoir overwrites any union data inside the Metier_CompetencesMobiliseesEmergentes_Item as the provided Savoir
func (t *Metier_CompetencesMobiliseesEmergentes_Item) FromSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSavoir performs a merge with any union data inside the Metier_CompetencesMobiliseesEmergentes_Item, using the provided Savoir
func (t *Metier_CompetencesMobiliseesEmergentes_Item) MergeSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Metier_CompetencesMobiliseesEmergentes_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Metier_CompetencesMobiliseesEmergentes_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCompetenceDetaillee returns the union data inside the Metier_CompetencesMobiliseesPrincipales_Item as a CompetenceDetaillee
func (t Metier_CompetencesMobiliseesPrincipales_Item) AsCompetenceDetaillee() (CompetenceDetaillee, error) {
	var body CompetenceDetaillee
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCompetenceDetaillee overwrites any union data inside the Metier_CompetencesMobiliseesPrincipales_Item as the provided CompetenceDetaillee
func (t *Metier_CompetencesMobiliseesPrincipales_Item) FromCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCompetenceDetaillee performs a merge with any union data inside the Metier_CompetencesMobiliseesPrincipales_Item, using the provided CompetenceDetaillee
func (t *Metier_CompetencesMobiliseesPrincipales_Item) MergeCompetenceDetaillee(v CompetenceDetaillee) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirEtreProfessionnel returns the union data inside the Metier_CompetencesMobiliseesPrincipales_Item as a MacroSavoirEtreProfessionnel
func (t Metier_CompetencesMobiliseesPrincipales_Item) AsMacroSavoirEtreProfessionnel() (MacroSavoirEtreProfessionnel, error) {
	var body MacroSavoirEtreProfessionnel
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirEtreProfessionnel overwrites any union data inside the Metier_CompetencesMobiliseesPrincipales_Item as the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobiliseesPrincipales_Item) FromMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirEtreProfessionnel performs a merge with any union data inside the Metier_CompetencesMobiliseesPrincipales_Item, using the provided MacroSavoirEtreProfessionnel
func (t *Metier_CompetencesMobiliseesPrincipales_Item) MergeMacroSavoirEtreProfessionnel(v MacroSavoirEtreProfessionnel) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMacroSavoirFaire returns the union data inside the Metier_CompetencesMobiliseesPrincipales_Item as a MacroSavoirFaire
func (t Metier_CompetencesMobiliseesPrincipales_Item) AsMacroSavoirFaire() (MacroSavoirFaire, error) {
	var body MacroSavoirFaire
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMacroSavoirFaire overwrites any union data inside the Metier_CompetencesMobiliseesPrincipales_Item as the provided MacroSavoirFaire
func (t *Metier_CompetencesMobiliseesPrincipales_Item) FromMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMacroSavoirFaire performs a merge with any union data inside the Metier_CompetencesMobiliseesPrincipales_Item, using the provided MacroSavoirFaire
func (t *Metier_CompetencesMobiliseesPrincipales_Item) MergeMacroSavoirFaire(v MacroSavoirFaire) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSavoir returns the union data inside the Metier_CompetencesMobiliseesPrincipales_Item as a Savoir
func (t Metier_CompetencesMobiliseesPrincipales_Item) AsSavoir() (Savoir, error) {
	var body Savoir
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSavoir overwrites any union data inside the Metier_CompetencesMobiliseesPrincipales_Item as the provided Savoir
func (t *Metier_CompetencesMobiliseesPrincipales_Item) FromSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSavoir performs a merge with any union data inside the Metier_CompetencesMobiliseesPrincipales_Item, using the provided Savoir
func (t *Metier_CompetencesMobiliseesPrincipales_Item) MergeSavoir(v Savoir) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Metier_CompetencesMobiliseesPrincipales_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Metier_CompetencesMobiliseesPrincipales_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
